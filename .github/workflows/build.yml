name: Build SeedSigner OS

on:
  push:
    branches: [ main, develop, master ]
  pull_request:
    branches: [ main, develop, master ]
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild Docker image'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 180  # 3 hours max
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Free up disk space
      run: |
        # Remove unnecessary packages to free up space
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo apt-get clean
        df -h
    
    - name: Setup required repositories
      run: |
        cd $HOME
        echo "📦 Cloning luckfox-pico SDK..."
        git clone https://github.com/lightningspore/luckfox-pico.git --depth=1 --single-branch
        
        echo "📦 Cloning seedsigner-os packages..."
        git clone https://github.com/seedsigner/seedsigner-os.git --depth=1 --single-branch
        
        echo "📦 Cloning seedsigner code..."
        git clone https://github.com/lightningspore/seedsigner.git --depth=1 -b luckfox-dev --single-branch
        
        # Verify repositories
        ls -la $HOME/
        echo "Repository sizes:"
        du -sh $HOME/luckfox-pico $HOME/seedsigner-os $HOME/seedsigner
    
    - name: Validate build environment
      run: |
        cd buildroot
        ./build.sh status
    
    - name: Build SeedSigner OS
      run: |
        cd buildroot
        echo "🚀 Starting SeedSigner build..."
        
        if [ "${{ github.event.inputs.force_rebuild }}" = "true" ]; then
          ./build.sh build --force
        else
          ./build.sh build
        fi
    
    - name: Extract build artifacts
      if: always()
      run: |
        cd buildroot
        ./build.sh extract || true
        
        # Show what was built
        echo "📋 Build output contents:"
        ls -la build-output/ || echo "No build output directory found"
        
        # Find any generated images
        echo "🔍 Searching for generated images:"
        find $HOME -name "*.img" -type f 2>/dev/null | head -10 || echo "No .img files found"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: seedsigner-os-image-${{ github.run_number }}
        path: |
          buildroot/build-output/
          ${{ runner.temp }}/build-logs.txt
        retention-days: 30
        if-no-files-found: warn
    
    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs-${{ github.run_number }}
        path: |
          buildroot/build-output/
          /tmp/*.log
        retention-days: 7
        if-no-files-found: ignore
    
    - name: Post-build summary
      if: always()
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Run Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        
        if [ -d "buildroot/build-output" ]; then
          echo "- **Artifacts**: Available in build-output/" >> $GITHUB_STEP_SUMMARY
          echo "### Generated Files:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          ls -la buildroot/build-output/ >> $GITHUB_STEP_SUMMARY || echo "No files found" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
